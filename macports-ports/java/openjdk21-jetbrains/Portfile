# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0
PortGroup        github 1.0

github.setup     JetBrains JetBrainsRuntime 21.0.3-b517.1 jbr-release-
name             openjdk21-jetbrains
categories       java devel
maintainers      {danchr @danchr} openmaintainer
platforms        {darwin}
# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

# https://github.com/JetBrains/JetBrainsRuntime/releases
supported_archs  x86_64 arm64

description      JetBrains Runtime on OpenJDK 21
long_description JetBrains Runtime is a fork of OpenJDK available for \
                 Windows, Mac OS X, and Linux. It supports enhanced \
                 class redefinition (DCEVM), features optional JCEF, a \
                 framework for embedding Chromium-based browsers, \
                 includes a number of improvements in font rendering, \
                 keyboards support, windowing/focus subsystems, HiDPI, \
                 accessibility, and performance, provides better \
                 desktop integration and bugfixes not yet present in \
                 OpenJDK.

master_sites     https://cache-redirector.jetbrains.com/intellij-jbr
use_bzip2        no

if {${configure.build_arch} eq "x86_64"} {
    set jbr_arch x64
    checksums    rmd160  93c7675ee367629dfb3c039118e8196b1fec1e8e \
                 sha256  89409bad19a3a548eb23c1b48526850fb30c1e975b5c7588200801fbbc78a8aa \
                 size    78650092
} else {
    set jbr_arch aarch64
    checksums    rmd160  0485fb3f4d03379e6069c1c0929a7c5adead2f08 \
                 sha256  3e24b5a1cbfab9d69b3f28018e68dbf67d2f05062d78f3df64e54bfaafa52b5b \
                 size    77440212
}

distname         jbr-[lindex [split ${version} -] 0]-osx-${jbr_arch}-[lindex [split ${version} -] 1]
extract.rename   yes

use_configure    no
build {}

variant BundledApp \
    description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant JNI \
    description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}

patch {
    foreach var { BundledApp JNI } {
        if {[variant_isset ${var}]} {
            reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
        }
    }
}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set target /Library/Java/JavaVirtualMachines/${name}
set destroot_target ${destroot}${target}

destroot {
    xinstall -m 755 -d ${destroot_target}
    copy ${worksrcpath}/Contents ${destroot_target}
}

livecheck.type          regex
livecheck.url   ${github.homepage}/releases.atom
livecheck.regex <title>jb\([lindex [split ${version} .] 0]\.\[^<\]*\)</title>


notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${target}/Contents/Home
"
