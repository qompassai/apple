diff -Naur ./third_party/cub/CMakeLists.txt ./third_party/cub/CMakeLists.txt
--- ./third_party/cub/CMakeLists.txt	2024-05-26 07:42:46
+++ ./third_party/cub/CMakeLists.txt	2024-05-26 07:55:35
@@ -119,7 +119,6 @@
 
   set(CUB_TREAT_FILE_AS_CXX "/TP")
 else ()
-  append_option_if_available("-Werror" CUB_CXX_WARNINGS)
   append_option_if_available("-Wall" CUB_CXX_WARNINGS)
   append_option_if_available("-Wextra" CUB_CXX_WARNINGS)
   append_option_if_available("-Winit-self" CUB_CXX_WARNINGS)
diff -Naur ./third_party/fbgemm/CMakeLists.txt ./third_party/fbgemm/CMakeLists.txt
--- ./third_party/fbgemm/CMakeLists.txt	2024-05-26 07:42:48
+++ ./third_party/fbgemm/CMakeLists.txt	2024-05-26 07:47:11
@@ -189,7 +189,6 @@
 else(MSVC)
   string(APPEND CMAKE_CXX_FLAGS " -Wall")
   string(APPEND CMAKE_CXX_FLAGS " -Wextra")
-  string(APPEND CMAKE_CXX_FLAGS " -Werror")
   string(APPEND CMAKE_CXX_FLAGS " -Wno-deprecated-declarations")
   string(APPEND CMAKE_CXX_FLAGS " -Wimplicit-fallthrough")
   target_compile_options(fbgemm_avx2 PRIVATE
diff -Naur ./third_party/fbgemm/third_party/googletest/googletest/cmake/internal_utils.cmake ./third_party/fbgemm/third_party/googletest/googletest/cmake/internal_utils.cmake
--- ./third_party/fbgemm/third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 07:42:56
+++ ./third_party/fbgemm/third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 07:58:22
@@ -82,13 +82,13 @@
     # http://stackoverflow.com/questions/3232669 explains the issue.
     set(cxx_base_flags "${cxx_base_flags} -wd4702")
   elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-    set(cxx_base_flags "-Wall -Wshadow -Werror -Wconversion")
+    set(cxx_base_flags "-Wall -Wshadow -Wconversion")
     set(cxx_exception_flags "-fexceptions")
     set(cxx_no_exception_flags "-fno-exceptions")
     set(cxx_strict_flags "-W -Wpointer-arith -Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch -Wunused-parameter -Wcast-align -Wchar-subscripts -Winline -Wredundant-decls")
     set(cxx_no_rtti_flags "-fno-rtti")
   elseif (CMAKE_COMPILER_IS_GNUCXX)
-    set(cxx_base_flags "-Wall -Wshadow -Werror")
+    set(cxx_base_flags "-Wall -Wshadow")
     if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0.0)
       set(cxx_base_flags "${cxx_base_flags} -Wno-error=dangling-else")
     endif()
diff -Naur ./third_party/googletest/googletest/cmake/internal_utils.cmake ./third_party/googletest/googletest/cmake/internal_utils.cmake
--- ./third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 07:42:57
+++ ./third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 08:01:29
@@ -84,13 +84,13 @@
     # Ensure MSVC treats source files as UTF-8 encoded.
     set(cxx_base_flags "${cxx_base_flags} -utf-8")
   elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-    set(cxx_base_flags "-Wall -Wshadow -Werror -Wconversion")
+    set(cxx_base_flags "-Wall -Wshadow -Wconversion")
     set(cxx_exception_flags "-fexceptions")
     set(cxx_no_exception_flags "-fno-exceptions")
     set(cxx_strict_flags "-W -Wpointer-arith -Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch -Wunused-parameter -Wcast-align -Wchar-subscripts -Winline -Wredundant-decls")
     set(cxx_no_rtti_flags "-fno-rtti")
   elseif (CMAKE_COMPILER_IS_GNUCXX)
-    set(cxx_base_flags "-Wall -Wshadow -Werror")
+    set(cxx_base_flags "-Wall -Wshadow")
     if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0.0)
       set(cxx_base_flags "${cxx_base_flags} -Wno-error=dangling-else")
     endif()
diff -Naur ./third_party/kineto/libkineto/third_party/dynolog/third_party/DCGM/CMakeLists.txt ./third_party/kineto/libkineto/third_party/dynolog/third_party/DCGM/CMakeLists.txt
--- ./third_party/kineto/libkineto/third_party/dynolog/third_party/DCGM/CMakeLists.txt	2024-05-26 07:43:30
+++ ./third_party/kineto/libkineto/third_party/dynolog/third_party/DCGM/CMakeLists.txt	2024-05-26 07:59:14
@@ -30,7 +30,7 @@
 set(CMAKE_C_VISIBILITY_PRESET hidden)
 set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)
 
-set(DCGM_CXX_FLAGS "-Werror -Wpedantic -Wno-sign-compare -Wno-unused-parameter -Wall -Wextra")
+set(DCGM_CXX_FLAGS "-Wpedantic -Wno-sign-compare -Wno-unused-parameter -Wall -Wextra")
 
 include(CheckCCompilerFlag)
 check_c_compiler_flag("-Wno-cast-function-type" CC_HAS_WNO_CAST_FUNCTION_TYPE)
@@ -80,13 +80,13 @@
 endif()
 
 if(CMAKE_BUILD_TYPE STREQUAL "Debug")
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror -g -O0")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -O0")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${DCGM_CXX_FLAGS} -g -O0")
 elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -Werror -g -fno-omit-frame-pointer")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -g -fno-omit-frame-pointer")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${DCGM_CXX_FLAGS} -g -fno-omit-frame-pointer")
 elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror -s -O3 -g -fno-omit-frame-pointer")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -s -O3 -g -fno-omit-frame-pointer")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${DCGM_CXX_FLAGS} -s -O3 -g -fno-omit-frame-pointer")
 endif()
 
diff -Naur ./third_party/kineto/libkineto/third_party/dynolog/third_party/cpr/CMakeLists.txt ./third_party/kineto/libkineto/third_party/dynolog/third_party/cpr/CMakeLists.txt
--- ./third_party/kineto/libkineto/third_party/dynolog/third_party/cpr/CMakeLists.txt	2024-05-26 07:43:31
+++ ./third_party/kineto/libkineto/third_party/dynolog/third_party/cpr/CMakeLists.txt	2024-05-26 07:59:58
@@ -73,7 +73,7 @@
 
 if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
 else()
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wpedantic -Werror")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wpedantic")
 endif()
 
 # SSL
diff -Naur ./third_party/kineto/libkineto/third_party/dynolog/third_party/pfs/CMakeLists.txt ./third_party/kineto/libkineto/third_party/dynolog/third_party/pfs/CMakeLists.txt
--- ./third_party/kineto/libkineto/third_party/dynolog/third_party/pfs/CMakeLists.txt	2024-05-26 07:43:32
+++ ./third_party/kineto/libkineto/third_party/dynolog/third_party/pfs/CMakeLists.txt	2024-05-26 08:00:28
@@ -12,7 +12,7 @@
 endif ()
 message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
 
-add_compile_options (-std=c++11 -Wall -Wextra -pedantic -Werror)
+add_compile_options (-std=c++11 -Wall -Wextra -pedantic)
 
 include_directories (include)
 
diff -Naur ./third_party/kineto/libkineto/third_party/googletest/googletest/cmake/internal_utils.cmake ./third_party/kineto/libkineto/third_party/googletest/googletest/cmake/internal_utils.cmake
--- ./third_party/kineto/libkineto/third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 07:43:32
+++ ./third_party/kineto/libkineto/third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 08:00:53
@@ -82,13 +82,13 @@
     # http://stackoverflow.com/questions/3232669 explains the issue.
     set(cxx_base_flags "${cxx_base_flags} -wd4702")
   elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-    set(cxx_base_flags "-Wall -Wshadow -Werror -Wconversion")
+    set(cxx_base_flags "-Wall -Wshadow -Wconversion")
     set(cxx_exception_flags "-fexceptions")
     set(cxx_no_exception_flags "-fno-exceptions")
     set(cxx_strict_flags "-W -Wpointer-arith -Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch -Wunused-parameter -Wcast-align -Wchar-subscripts -Winline -Wredundant-decls")
     set(cxx_no_rtti_flags "-fno-rtti")
   elseif (CMAKE_COMPILER_IS_GNUCXX)
-    set(cxx_base_flags "-Wall -Wshadow -Werror")
+    set(cxx_base_flags "-Wall -Wshadow")
     if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0.0)
       set(cxx_base_flags "${cxx_base_flags} -Wno-error=dangling-else")
     endif()
diff -Naur ./third_party/protobuf/third_party/googletest/googletest/cmake/internal_utils.cmake ./third_party/protobuf/third_party/googletest/googletest/cmake/internal_utils.cmake
--- ./third_party/protobuf/third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 07:43:45
+++ ./third_party/protobuf/third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 08:02:39
@@ -76,7 +76,7 @@
     # http://stackoverflow.com/questions/3232669 explains the issue.
     set(cxx_base_flags "${cxx_base_flags} -wd4702")
   elseif (CMAKE_COMPILER_IS_GNUCXX)
-    set(cxx_base_flags "-Wall -Wshadow -Werror")
+    set(cxx_base_flags "-Wall -Wshadow")
     if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0.0)
       set(cxx_base_flags "${cxx_base_flags} -Wno-error=dangling-else")
     endif()
diff -Naur ./third_party/tensorpipe/third_party/googletest/googletest/cmake/internal_utils.cmake ./third_party/tensorpipe/third_party/googletest/googletest/cmake/internal_utils.cmake
--- ./third_party/tensorpipe/third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 07:43:50
+++ ./third_party/tensorpipe/third_party/googletest/googletest/cmake/internal_utils.cmake	2024-05-26 07:57:24
@@ -82,7 +82,7 @@
     # http://stackoverflow.com/questions/3232669 explains the issue.
     set(cxx_base_flags "${cxx_base_flags} -wd4702")
   elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-    set(cxx_base_flags "-Wall -Wshadow -Werror -Wconversion")
+    set(cxx_base_flags "-Wall -Wshadow -Wconversion")
     set(cxx_exception_flags "-fexceptions")
     set(cxx_no_exception_flags "-fno-exceptions")
     set(cxx_strict_flags "-W -Wpointer-arith -Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch -Wunused-parameter -Wcast-align -Wchar-subscripts -Winline -Wredundant-decls")
