# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compilers 1.0

name                sparskit
version             2-20190610
# note, this is the "version 2" updated in 2019, not the earlier one from 2015 or before
categories          science
platforms           darwin
maintainers         {dstrubbe @dstrubbe}
license             LGPL-2.1+

description         A basic tool-kit for sparse matrix computations

long_description    A basic tool-kit for sparse matrix computations: programs \
                    for converting data structures, printing simple \
                    statistics on a matrix, plotting a matrix profile, \
                    performing basic linear algebra operations with sparse \
                    matrices and so on.

homepage            https://www-users.cs.umn.edu/~saad/software/SPARSKIT
master_sites        ${homepage}
distname            SPARSKIT2

# This line should be removed when the next proper version of the software is released.
dist_subdir         ${name}/${version}

checksums           rmd160  77a75cd20678b190814084c28e4b72533210e9cd \
                    sha256  ecdd0a9968d6b45153a328710a42fe87600f0bba0e3c53896090b8ae1c113b7a \
                    size    1287441

use_configure       no

patchfiles          patch-makefile.diff \
                    patch-INOUT-makefile.diff \
                    patch-MATGEN-FEM-makefile.diff

compilers.choose    fc
compilers.setup     require_fortran
compilers.allow_arguments_mismatch yes

depends_build-append port:cctools

configure.optflags  -O3

build.args          OPT="-c ${configure.fcflags}"

use_parallel_build  yes

test.run            yes
test.args           FFLAGS="${configure.fcflags}"
# test requires FC, FFLAGS set because test makefiles lack explicit rule for .f -> .o and these are in the implicit rule
# One test may fail currently: /bin/sh: line 1: 11978 Segmentation fault: 11  ./info1.ex < saylr1

pre-build {
    build.args-append  F77=${configure.fc} FFLAGS="${configure.fcflags}"

    # this file will be built, and it can cause linking failures if instead we add new things to an incompatible library pre-existing
    delete ${worksrcpath}/libskit.a
}

pre-test {
    test.args-append   F77=${configure.fc} FC=${configure.fc}
}

destroot {
    xinstall ${worksrcpath}/libskit.a ${destroot}${prefix}/lib/
}

post-test {
    ui_notice "Examine log file for test results."
}

livecheck.type      regex
livecheck.url       [lindex ${master_sites} 0]
livecheck.regex     SPARSKIT(\[0-9.\]+)${extract.suffix}
